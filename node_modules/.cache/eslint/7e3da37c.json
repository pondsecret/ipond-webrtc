[{"/home/pond/security-drone/web-demo/ipond-webrtc/src/main.js":"1","/home/pond/security-drone/web-demo/ipond-webrtc/src/plugins/vuetify.js":"2","/home/pond/security-drone/web-demo/ipond-webrtc/src/App.vue":"3","/home/pond/security-drone/web-demo/ipond-webrtc/src/router/index.js":"4","/home/pond/security-drone/web-demo/ipond-webrtc/src/views/LoginBox.vue":"5","/home/pond/security-drone/web-demo/ipond-webrtc/src/views/Main/StreamingVideo2.vue":"6","/home/pond/security-drone/web-demo/ipond-webrtc/src/views/Main/StreamingVideo1.vue":"7","/home/pond/security-drone/web-demo/ipond-webrtc/src/views/Main/StreamingVideo.vue":"8","/home/pond/security-drone/web-demo/ipond-webrtc/src/components/UserProfile.vue":"9","/home/pond/security-drone/web-demo/ipond-webrtc/src/components/ImageGallery.vue":"10"},{"size":227,"mtime":1660879491415,"results":"11","hashOfConfig":"12"},{"size":290,"mtime":1661313562162,"results":"13","hashOfConfig":"12"},{"size":195,"mtime":1660897754485,"results":"14","hashOfConfig":"12"},{"size":737,"mtime":1661424689347,"results":"15","hashOfConfig":"12"},{"size":4659,"mtime":1661919103215,"results":"16","hashOfConfig":"12"},{"size":9063,"mtime":1661511071984,"results":"17","hashOfConfig":"12"},{"size":5319,"mtime":1661406756558,"results":"18","hashOfConfig":"12"},{"size":15992,"mtime":1662027931998,"results":"19","hashOfConfig":"12"},{"size":3481,"mtime":1661506767733,"results":"20","hashOfConfig":"12"},{"size":3013,"mtime":1661416600038,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"os4qme",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/home/pond/security-drone/web-demo/ipond-webrtc/src/main.js",[],[],"/home/pond/security-drone/web-demo/ipond-webrtc/src/plugins/vuetify.js",[],"/home/pond/security-drone/web-demo/ipond-webrtc/src/App.vue",[],[],"/home/pond/security-drone/web-demo/ipond-webrtc/src/router/index.js",[],"/home/pond/security-drone/web-demo/ipond-webrtc/src/views/LoginBox.vue",[],"/home/pond/security-drone/web-demo/ipond-webrtc/src/views/Main/StreamingVideo2.vue",[],"/home/pond/security-drone/web-demo/ipond-webrtc/src/views/Main/StreamingVideo1.vue",[],"/home/pond/security-drone/web-demo/ipond-webrtc/src/views/Main/StreamingVideo.vue",["45","46","47"],"<template>\n  <v-container fill-height fluid class=\"pa-0 ma-0 \" ref=\"main\" width=\"100%\">\n    <v-card width=\"100%\" height=\"100%\" class=\"d-flex\" :color=\"colors.vid_bg\">\n        <!-- main menu drawer -->\n      <v-navigation-drawer\n      :color=\"colors.background\"\n      :mini-variant.sync=\"mini\"\n      mini-variant-width=\"56\"\n      clipped\n      app\n      ref=\"navDrawer\"\n      width=\"300\"\n      permanent\n      >\n\n        <!-- List menus -->\n        <v-list-item class=\"px-2 my-4\">\n          <v-list-item-avatar>\n            <!-- <v-img :src=\"users.src\" ></v-img> -->\n            <v-avatar\n            color=\"blue lighten-3\">ICS</v-avatar>\n          </v-list-item-avatar>\n\n          <v-list-item-title>\n            <h3 style=\"color:#2F75BB\">{{users.name}}</h3>\n            <h5 class=\"pt-2\">{{users.email}}</h5>\n          </v-list-item-title>\n\n          <v-btn\n          icon\n          @click.stop=\"mini = !mini\"\n          >\n          <v-icon :color=\"colors.text\">mdi-chevron-left</v-icon>\n          </v-btn>\n        </v-list-item>\n        \n        <v-divider :color=\"colors.text\" class=\"my-4\"></v-divider>\n\n        <v-list  two-line dense nav>\n          <v-list-item-group\n          id=\"list-group\">\n            <!-- <v-list-item\n            :color=\"colors.text\"\n            v-for=\"menu in menus\"\n            :key=\"menu.title\">\n              <v-list-item-icon class=\"my-6\" >\n                <v-icon >{{menu.icon}}</v-icon>\n              </v-list-item-icon>\n              <v-list-item-content>\n                <v-list-item-title><h3>{{menu.title}}</h3></v-list-item-title>\n              </v-list-item-content>\n            </v-list-item> -->\n            \n            <v-list-item \n            :color=\"colors.text\"\n            v-for=\"option, index in attach.streamList.options\"\n            :key=\"option.id\"\n            @click=\"start(index)\">\n              <v-list-item-icon class=\"my-6\">\n                <v-icon>mdi-quadcopter</v-icon>\n              </v-list-item-icon>\n              <v-list-item-content>\n                <v-list-item-title><h3>{{ option.description }}</h3></v-list-item-title>\n              </v-list-item-content>\n              \n            </v-list-item>\n\n            <!-- Gallery -->\n            <v-list-item\n            @click.prevent=\"showGallery\">\n              <v-list-item-icon class=\"my-6\">\n                <v-icon>mdi-image-multiple</v-icon>\n              </v-list-item-icon>\n              <v-list-item-content>\n                <v-list-item-title><h3>Gallery</h3></v-list-item-title>\n              </v-list-item-content>\n\n              <!-- Gallery component -->\n              <ImageGallery \n              :showDialog=\"openGallery\"\n              @closeGallery=\"setOpenGallery\"\n              />\n            </v-list-item>\n\n            <!-- User Profile -->\n            <v-list-item\n            @click.prevent=\"showProfile\">\n              <v-list-item-icon class=\"my-6\">\n                <v-icon>mdi-account</v-icon>\n              </v-list-item-icon>\n              <v-list-item-content>\n                <v-list-item-title><h3>My Account</h3></v-list-item-title>\n              </v-list-item-content>\n\n              <!-- User Profile component -->\n              <UserProfile \n              :showProfile=\"openProfile\"\n              :username=\"users.name\"\n              :useremail=\"users.email\"\n              :userimgsrc=\"users.src\"\n              @closeUserProfile=\"setOpenProfile\"\n              />\n            </v-list-item>\n          </v-list-item-group>\n        </v-list>\n\n        <!-- List menus -->\n      </v-navigation-drawer>\n      <!-- main menu drawer -->\n\n      <!-- Video field -->\n      <v-card width=\"100%\" height=\"100%\" tile class=\"d-flex justify-center \" :color=\"colors.vid_bg\">\n        <video id=\"player\"  :srcObject.prop=\"attach.remote.stream\"  playsinline autoplay loop ></video>\n\n        <!-- Video Overlat record button -->\n        <v-overlay\n        absolute\n        opacity=\"0\"\n        style=\"height:25px ; width:60px; left:94%; top:88%\"\n        :dark=\"False\">\n          <v-tooltip top >\n            <template v-slot:activator=\"{on}\">\n              <v-btn\n              rounded  \n              v-on=\"on\"\n              style=\"opacity:0.9\"\n              @click=\"toggleRecord\">\n              <v-snackbar\n              v-model=\"snackbar\"\n              app\n              timeout=\"2000\"\n              top\n              light\n              color=\"success\"\n              content-class=\"d-flex justify-center\"\n              >\n                {{!recording ? 'Stop Recording Stream!' : 'Recording Stream'}}\n              </v-snackbar>\n                <span class=\"text-h5\">{{recording ? ' 00:00 ' : null}}</span>\n                <v-icon v-if=\"recording === false\" color=\"error\">mdi-radiobox-marked</v-icon>\n                <v-icon v-else color=\"error\" class=\"ml-4\">mdi-stop</v-icon>\n              </v-btn>\n\n              <v-snackbar\n              v-model=\"h_snackbar\"\n              app\n              timeout=\"20000\"\n              centered\n              light\n              color=\"light-blue darken-1\"\n              content-class=\"d-flex justify-center\"\n              >\n                {{hangup ? 'Hanging up the Stream!' : 'Preparing incoming Stream'}}\n              </v-snackbar>\n            </template>\n            <span v-if=\"recording === false\">Start Record Video</span>\n            <span  v-else >Stop Recording</span>\n          </v-tooltip>\n\n        </v-overlay>\n\n      </v-card>\n      <!-- Video field -->\n      \n    </v-card>\n\n  </v-container>\n</template>\n\n<script>\nimport ImageGallery from '@/components/ImageGallery.vue'\nimport UserProfile from '@/components/UserProfile.vue';\nimport { Janus } from 'janus-gateway'\nimport fs from 'fs'\n\n// webRTC server location\nlet JANUS_URL = 'https://34.143.225.243:8089/janus'\nif(window.location.protocol === 'http:'){\n   JANUS_URL = 'http://34.143.225.243:8088/janus'\n}\n\nexport default {\n    name: \"StreamingVideo\",\n    data: () => {\n        return {\n            h_snackbar: false,\n            hangup: false,\n            vid_src: null,\n            snackbar: false,\n            recording: false,\n            False : false,\n            openProfile: false,\n            openGallery: false,\n            mini: true,\n            colors: {\n                background: \"#fff\",\n                text: \"#2F75BB\",\n                vid_bg: \"#322d31\"\n            },\n            menus: [\n                { title: \"Drone01\", icon: \"mdi-quadcopter\" },\n                { title: \"Drone02\", icon: \"mdi-quadcopter\" },\n                { title: \"Drone03\", icon: \"mdi-quadcopter\" },\n            ],\n            users:{\n              name: \"ICS Team\",\n              email: \"icsco.dev@gmail.com\",\n              src:  \"https://randomuser.me/api/portraits/men/85.jpg\"\n            },\n            attach:{\n              plugin: null,\n              message: {\n                status: null\n              },\n              streamList: {\n                selected: null,\n                options: [],\n                selected_id: null,\n                selected_media: null,\n                selected_mid: null,\n              },\n              remote: {\n                video: 0,\n                track: {},\n                stream: null,\n              }\n            },\n            janusError: null,\n            recorder: null,\n        };\n    },\n    mounted() {\n      Janus.init({\n        debug: true,\n        dependencies: Janus.useDefaultDependencies(),\n        callback: ()=>{\n          // console.log(\"Connecting to Janus api with server \",JANUS_URL)\n          this.connect(JANUS_URL)\n        }\n      })\n    },\n    methods: {\n        \n        showGallery() {\n            this.openGallery = true;\n            console.log(this.openGallery)\n            return this.openGallery;\n        },\n        setOpenGallery(value){\n          this.openGallery = value\n        },\n        showProfile(){\n          this.openProfile = true;\n          return this.openProfile\n        },\n        setOpenProfile(value){\n          this.openProfile = value\n        },\n        toggleRecord(){\n          this.recording = !this.recording\n          this.snackbar = true\n          if(this.recording != true){\n            this.stopRecord()\n          }else{\n            this.constuctMediaRecorder()\n            this.startRecord()\n          }\n        },\n        \n        // Janus Implement\n        // Connect to Janus\n        connect(server){\n          this.janus = new Janus({server,\n            // Call on success callback\n            success: ()=>{\n              console.log(\"Connected\")\n              this.attachPlugin()\n            },\n            // Call on error callback\n            error: (err)=>{\n              console.log(\"Error establish connection to Janus server! Please check the server status.\")\n              this.onError(\"Failed to connect Janus server \",err)\n            },\n            destroyed: ()=>{\n              console.log(\"Destroyed\")\n            }\n          })\n        },\n\n        // Attach Plugin\n        attachPlugin() {\n          this.janus.attach({\n            plugin:   \"janus.plugin.streaming\",\n            opaqueId: 'thisisopaqueid',\n            // on Attach plugin success\n            success: (pluginHandle) => {\n              this.attach.plugin = pluginHandle\n              console.log(\"Attach Plugin Success\")\n              this.updateStreamsList()\n            },\n            // on Attach plugin error\n            error: (err) => {\n              this.onError(\"Error attaching plugin...! \",err)\n            },\n            iceState: (state) => {\n              console.log(\"ICE state changed to \",state)\n            },\n            webrtcState: (on) => {\n              console.log(\"Janus says our WebRTC PeerConnection is \" + (on ? \"up\" : \"down\") + \" now\")\n            },\n            slowLink: (uplink, lost, mid) => {\n              console.log(\"Janus reports problems \" + (uplink ? \"sending\" : \"receiving\") +\n                        \" packets on mid \" + mid + \" (\" + lost + \" lost packets)\")\n            },\n            onmessage: (msg, jsep) => {\n              // Get message \n              let result = msg.result\n              if(result){\n                if(result.status){\n                  this.attach.message.status = result.status\n                }\n              }\n              // Handle error message\n              else if(msg.error){\n                this.onError(msg.error)\n                return;\n              }\n\n              // Handle jsep\n              if(jsep){\n                Janus.debug(\"Handling SDP as Well.... \",jsep)\n                let stereo = (jsep.sdp.indexOf(\"stereo=1\") !== -1 )\n                this.attach.plugin.createAnswer({\n                  jsep: jsep,\n                  media: {\n                    audioSend: false,\n                    videoSend: false,\n                    data:      true,\n                  },\n                  customizeSdp: (jsep) => {\n                    if(stereo && jsep.sdp.indexOf(\"stereo=1\") == -1 ) {\n                      jsep.sdp = jsep.sdp.replace(\"useinbandfec=1\", \"useinbandfec=1;stereo=1\")\n                    }\n                  },\n                  success: (jsep) => {\n                    Janus.debug(\"Got SDP!\", jsep)\n                    let body = { request: \"start\"}\n                    this.attach.plugin.send({\n                      message: body,\n                      jsep: jsep\n                    })\n                  },\n                  error: (error) => {\n                    this.onError(\"WebRTC Error: \",error)\n                    alert(\"WebRTC error... \" , error)\n                  }\n                })\n              }\n            },\n            onremotetrack: (track , mid, on) => {\n              Janus.debug(\"Remote track (mid=\" + mid + \") \" + (on ? \"added\" : \"removed\") + \":\", track)\n              // New track was added \n              if(track.kind === \"video\") {\n                this.attach.remote.video += 1 \n                this.attach.remote.stream = new MediaStream()\n                this.attach.remote.stream.addTrack(track.clone())\n                this.attach.remote.track.mid = this.attach.remote.stream\n                Janus.log(\"Created remote video stream:\", this.attach.remote.stream)\n              }\n            },\n\n            oncleanup: () => {\n              this.onCleanupCall()\n            }\n          })\n        },\n      // Stream List updater\n      updateStreamsList() {\n        this.attach.plugin.send ({\n          message: { request: \"list\"},\n          success: (result) => {\n            if(!result) {\n              this.onError(\"Got no response to our query for available streams.\")\n            }\n            console.log(\"Updating StreamList....\",result)\n            this.attach.streamList.options = result.list\n            // if (result.list.length) {\n            //   this.attach.streamList.selected = this.attach.streamList.options[1].id\n            // }\n          }\n        })\n      },\n      // stop stream\n      stop() {\n        this.hangup = true\n        this.h_snackbar = true\n        this.attach.plugin.send({ message: { request: \"stop\" } } )\n        this.attach.plugin.hangup()\n      },\n      // start stream\n      start(idx){\n        // this.stop()\n        if(this.attach.remote.stream !== null){\n          this.stop()\n        }\n        \n        // this.attach.streamList.selected = this.attach.streamList.options[index].id\n        this.hangup = false\n        this.h_snackbar = true\n        this.attach.streamList.selected = this.attach.streamList.options[idx]\n        this.attach.streamList.selected_id = this.attach.streamList.options[idx].id\n        this.attach.streamList.selected_media = this.attach.streamList.options[idx].media[0].mid\n        this.vid_src = this.attach.remote.stream\n        this.attach.plugin.send({ message: { request: \"watch\", id: this.attach.streamList.selected.id } })\n      },\n\n      // Record\n      constuctMediaRecorder(){\n        const options = {\n          videoBitsPerSecond : 2500000,\n          mimeType : 'video/webm;codecs=h264'\n        }\n\n        this.recorder = new MediaRecorder(this.attach.remote.stream, options)\n        if(!this.recorder){\n          console.log(\"Error consturc MediaRecorder\")\n        }\n\n      },\n      startRecord(){\n        this.recorder.start()\n        this.recorder.onstart = () => {\n          console.log(\"Start recording the stream\")\n        }\n      },\n      stopRecord(){\n        this.recorder.stop()\n        this.recorder.onstop = () => {\n          console.log(\"Recording stopped....\")\n\n          const blob = new Blob(chunks, {'type' : 'video/webm;codecs=h264'})\n        }\n      },\n      // record(){\n      //   let action = \"start\"\n      //   if(this.recording != true){\n      //     action = \"stop\"\n      //   }\n      //   const body = {\n      //     request: \"recording\",\n      //     action: action,\n      //     id: this.attach.streamList.selected_id,\n      //     video: \"/home/pond/Videos/record\"\n      //   }\n      //   this.attach.plugin.send({ message: body ,\n      //   success: (result) => {\n      //     if(!result){\n      //       this.onError(\"Request recording failed\")\n      //     }\n      //     console.log(\"Recording..... \", result)\n      //   }})\n      //   console.log(\"Record body :: \" ,body)\n      // },\n\n      // Clean up parameter\n      onCleanupCall(){\n        Janus.log(\"Cleaning up.....!\")\n        this.attach.remote.stream = null\n        this.attach.remote.video = 0\n        this.attach.remote.track = {}\n        this.attach.message.status = null\n        this.janusError = null\n      },\n\n      // Handle Janus Errors\n      onError(msg, err='') {\n        Janus.error(msg, err)\n        this.janusError = msg + err\n        alert(this.janusError, function(){\n          window.location.reload()\n        })\n      }\n    },\n    \n    components: { ImageGallery, UserProfile }\n}\n</script>\n\n<style>\n:-webkit-scrollbar{\n    width:2px;\n}\n::-webkit-scrollbar-track {\n\t\n  background: #f1f1f1; \n}\n \n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #888; \n}\n\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #555; \n}\n</style>","/home/pond/security-drone/web-demo/ipond-webrtc/src/components/UserProfile.vue",[],"/home/pond/security-drone/web-demo/ipond-webrtc/src/components/ImageGallery.vue",[],{"ruleId":"48","severity":2,"message":"49","line":174,"column":8,"nodeType":"50","messageId":"51","endLine":174,"endColumn":10},{"ruleId":"48","severity":2,"message":"52","line":441,"column":17,"nodeType":"50","messageId":"51","endLine":441,"endColumn":21},{"ruleId":"53","severity":2,"message":"54","line":441,"column":33,"nodeType":"50","messageId":"55","endLine":441,"endColumn":39},"no-unused-vars","'fs' is defined but never used.","Identifier","unusedVar","'blob' is assigned a value but never used.","no-undef","'chunks' is not defined.","undef"]